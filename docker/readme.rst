Dockers
=======

.. |build-dockerfile| replace:: Dockerfile
.. _build-dockerfile: ./build/windows/Dockerfile

.. |deps-dockerfile| replace:: Dockerfile
.. _deps-dockerfile: ./deps/windows/Dockerfile

.. |encoder-dockerfile| replace:: Dockerfile
.. _encoder-dockerfile: ./encoder/ubuntu22.04/selfbuild-prodkmd/Dockerfile

.. |jstest-dockerfile| replace:: Dockerfile
.. _jstest-dockerfile: ./jstest/ubuntu22.04/Dockerfile

.. |owt-lin-dockerfile| replace:: Dockerfile
.. _owt-lin-dockerfile: ./owt/ubuntu22.04/Dockerfile

.. |owt-win-dockerfile| replace:: Dockerfile
.. _owt-win-dockerfile: ./owt/windows/Dockerfile

.. |streamer-dockerfile| replace:: Dockerfile
.. _streamer-dockerfile: ./streamer/ubuntu22.04/Dockerfile

.. |p2p-dockerfile| replace:: Dockerfile
.. _p2p-dockerfile: ./p2p/ubuntu22.04/Dockerfile


This folder contains collection of Dockerfiles used within Android and Windows
Cloud Streaming reference stacks. Produced images belong to one of the
following categories:

* Build helpers
* Runtime images
* Test images

Build helpers
-------------

For Windows reference stack
~~~~~~~~~~~~~~~~~~~~~~~~~~~

+----------+------------------------+---------------------+-------------------------------------------------------------+
| Image    | Dockerfile             | Base image          | Purpose                                                     |
+==========+========================+=====================+=============================================================+
| build    | |build-dockerfile|_    | Windows Server 2019 | Base image for OWT builds. Contains installed Visual Studio |
|          |                        |                     | and gclient tool.                                           |
+----------+------------------------+---------------------+-------------------------------------------------------------+
| deps     | |deps-dockerfile|_     | Ubuntu 23.04        | Image contains cross-compiled components for Windows Cloud  |
|          |                        |                     | Streaming reference stack (FFmpeg, OpenSSL, etc.).          |
+----------+------------------------+---------------------+-------------------------------------------------------------+
| owt      | |owt-win-dockerfile|_  | build               | Image contains OWT built for Windows Cloud Streaming        |
|          |                        |                     | reference stack.                                            |
+----------+------------------------+---------------------+-------------------------------------------------------------+

``deps`` image is based on Ubuntu 23.04 image and can be built by docker on
Linux or under WSL2 (note: Ubuntu 23.04 or later is required to build FFmpeg
with dx11va av1 decoder support)::

  docker build -f docker/deps/windows/Dockerfile -t deps .

To copy artifacts from the ``deps`` image, run the following command::

  docker run --rm -u $(id -u):$(id -g) -v $(pwd):/opt/dist2 deps \
    cp -rd /opt/dist/build-deps /opt/dist2/

``./build-deps/`` folder will be created on your host system. Copy this
folder further to the Windows system where you plan to build OWT and Windows
reference stack.

``build`` image is a helper image which contains prerequisites to build OWT. It
can be built with docker on Windows with the following command::

  docker build -f docker/build/windows/Dockerfile -t build .

``owt`` image is based on the ``build`` image which you should build
beforehand. ``owt`` image also requires artifacts generated by ``deps`` image:
place them on the top level of the cloned copy of this repository. After that
you can build OWT with the following command::

  scp -rd name@linux.host:/path/to/build-deps .
  docker build -f docker/owt/windows/Dockerfile -t owt --build-arg IMAGE=build .

Finally, copy artifacts from ``owt`` image::

  docker run --rm -v $(pwd):C:\outputs owt \
        cmd.exe /C xcopy /s /i /y C:\build-deps C:\outputs\build-deps

Copied artifacts are combination of artifacts from ``deps`` and ``owt``
images. You can use them to build reference stack with meson::

  meson setup _build --wrap-mode=forcefallback \
    -Dprebuilt-path=$(pwd)/build-deps/windows-x86_64

For Android reference stack
~~~~~~~~~~~~~~~~~~~~~~~~~~~

+----------+------------------------+---------------------+-------------------------------------------------------------+
| Image    | Dockerfile             | Base image          | Purpose                                                     |
+==========+========================+=====================+=============================================================+
| owt      | |owt-lin-dockerfile|_  | Ubuntu 22.04        | Image contains OWT built for Android Cloud Streaming        |
|          |                        |                     | reference stack.                                            |
+----------+------------------------+---------------------+-------------------------------------------------------------+

``owt`` image can be built with docker as follows::

  docker build -f docker/build/windows/Dockerfile -t owt .

After the build run the following script to replace `prebuilt/linux-x86_64 <../prebuilt/linux-x86_64>`_
artifacts with the recently built version::

  ./scripts/copy-owt.sh owt

Please, consider to commit artifacts to the repository and post a Pull Request.

Runtime images
--------------

Currently we provide runtime images for Android reference stack only.

+----------+------------------------+---------------------+-------------------------------------------------------------+
| Image    | Dockerfile             | Base image          | Purpose                                                     |
+==========+========================+=====================+=============================================================+
| encoder  | |encoder-dockerfile|_  | Ubuntu 22.04        | Image provides FFmpeg based video encoder for Android       |
|          |                        |                     | reference stack.                                            |
+----------+------------------------+---------------------+-------------------------------------------------------------+
| streamer | |streamer-dockerfile|_ | Ubuntu 22.04        | Image provides OWT based streaming server for Android       |
|          |                        |                     | reference stack.                                            |
+----------+------------------------+---------------------+-------------------------------------------------------------+

Build these images as follows::

    docker build -f docker/encoder/ubuntu22.04/selfbuild-prodkmd/Dockerfile -t encoder .
    docker build -f docker/streamer/ubuntu22.04/Dockerfile -t streamer .

Test images
-----------

+----------+------------------------+---------------------+-------------------------------------------------------------+
| Image    | Dockerfile             | Base image          | Purpose                                                     |
+==========+========================+=====================+=============================================================+
| jstest   | |jstest-dockerfile|_   | Ubuntu 22.04        | Test image for Android reference stack.                     |
+----------+------------------------+---------------------+-------------------------------------------------------------+
| p2p      | |p2p-dockerfile|_      | Ubuntu 22.04        | Image provides P2P server which can be used for testing     |
|          |                        |                     | purposes.                                                   |
+----------+------------------------+---------------------+-------------------------------------------------------------+

Build these images as follows::

    docker build -f docker/jstest/ubuntu22.04/Dockerfile -t jstest .
    docker build -f docker/p2p/ubuntu22.04/Dockerfile -t p2p .
